(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{93:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return l}));var n=r(3),i=r(7),a=(r(0),r(110)),o={sidebar_position:3},s={unversionedId:"tutorial-basics/MergeSort",id:"tutorial-basics/MergeSort",isDocsHomePage:!1,title:"Bubble Sort",description:"Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.",source:"@site/docs/tutorial-basics/MergeSort.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/MergeSort",permalink:"/Algorithms-Docs-/docs/tutorial-basics/MergeSort",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tutorial-basics/MergeSort.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Linear Search",permalink:"/Algorithms-Docs-/docs/tutorial-basics/LinearSearch"},next:{title:"Selection Sort",permalink:"/Algorithms-Docs-/docs/tutorial-basics/SelectionSort"}},c=[{value:"Code",id:"code",children:[]},{value:"Output",id:"output",children:[]}],u={toc:c};function l(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Bubble Sort")," is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order."),Object(a.b)("h2",{id:"code"},"Code"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rust"},'fn bubble_sort(mut arr: [i32; 7]) -> [i32; 7] {\n    for i in 0..arr.len() {\n        for j in 0..arr.len() - i - 1 {\n            if arr[j] > arr[j + 1] {\n                let temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    arr\n}\nfn main() {\n    let mut arr = [64, 34, 25, 12, 22, 11, 9];\n    arr = bubble_sort(arr);\n    println!("Sorted array is {:?}", arr);\n} \n')),Object(a.b)("h2",{id:"output"},"Output"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"    Finished dev [unoptimized + debuginfo] target(s) in 0.34s\n     Running `target/debug/algo`\nSorted array is [9, 11, 12, 22, 25, 34, 64] \n")))}l.isMDXComponent=!0}}]);